---
import '@fontsource/poppins';
import '@fontsource/space-mono';
import GardenLink from "../components/GardenLink.astro";
import MainLayout from "../layouts/MainLayout.astro";

import { getCollection } from 'astro:content';

const essay = await getCollection('essay');
const media = await getCollection('media');
const thought = await getCollection('thought');

class Link {
   title: string;
   date: Date;
   slug: string;
   type: string

   constructor(title: string, date: Date, slug: string, type: string) {
      this.title = title;
      this.date = date;
      this.slug = slug;
      this.type = type;
   }
}

let links: Link[] = [];

thought.forEach((item) => {
   let link = new Link(item.data.title, item.data.date, "thoughts/"+item.slug, "Thought");
   links.push(link);
});

essay.forEach((item) => {
   let link = new Link(item.data.title, item.data.date, "essays/"+item.slug, "Essay");
   links.push(link);
});

media.forEach((item) => {
   let link = new Link(item.data.name, item.data.date, "media/"+item.slug, "Media");
   links.push(link);
});

links.sort((a, b) => b.date.valueOf() - a.date.valueOf());

---

<MainLayout>
   <div class="centered-container">
      <div class="inner-item">
         <h1>Garden</h1>
         <p class="subtitle">
            Thoughts, Essays, and Media I've interacted with.
         </p>
      </div>
   </div>
   <div class="grid-container">
      {links.map((item) => 
         <GardenLink title={item.title} href={item.slug} type={item.type}/>
      )}
   </div>
</MainLayout>

<style lang="scss">
   @use '../styles/_main-colors' as *;
   @use '../styles/_centered-classes' as *;
   
   :root {
      background-color: $base;
      color: $text;
   }

   body {
      margin: 0;
   }
   
   h1 {
      font-family: 'poppins', sans-serif;
      font-size: max(8vw, 4rem);
      font-weight: bold;
      line-height: 1.2;
      margin-top: 1rem;
      margin-left: 1rem;
      margin-bottom: 0;
      padding-right: 4rem;
   }

   .subtitle {
      font-family: 'Space Mono', sans-serif;
      font-size: max(1.5vw, 1rem);
      max-width: 80rem;
      margin-left: 1rem;
      margin-right: 2rem;
   }

   .grid-container {
      margin-right: 8rem;
      margin-left: 8rem;
      column-gap: 1rem;
      row-gap: 1rem;
      display: grid;
      grid-template-columns: 1fr 1fr 1fr;
      grid-auto-rows: fit-content(1em);
   }

   @media only screen and (max-width: 1200px) {
      .grid-container {
         grid-template-columns: 1fr 1fr;
         margin-right: 4rem;
         margin-left: 4rem;
      }
   }

   @media only screen and (max-width: 800px) {
      .grid-container {
         margin-left: 1rem;
         margin-right: 1rem;
         grid-template-columns: 1fr;
      }
   }

</style>
